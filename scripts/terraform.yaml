name: Terraform CI/CD Pipeline

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: false

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Cache Terraform providers
      uses: actions/cache@v2
      with:
        path: ~/.terraform.d/plugins
        key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
        restore-keys: ${{ runner.os }}-terraform-

    - name: Set up GCP Credentials
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: your-gcp-project-id

    - name: Terraform Initialize
      run: terraform init

    - name: Terraform Format Check
      run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate

    - name: Set up TFLint
      uses: terraform-linters/setup-tflint@v1

    - name: Run TFLint
      run: |
        tflint --init
        tflint

    - name: Install Checkov
      run: pip install checkov

    - name: Run Checkov
      run: checkov -d ./terraform

    - name: Install tfsec
      run: curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

    - name: Run tfsec
      run: tfsec .

    - name: Terraform Plan
      run: terraform plan -out=tfplan -input=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve tfplan -lock-timeout=60s -input=false
      # For Manual Approval (Countinuos Delivery):
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install dependencies for Terratest
      run: |
        cd test
        go mod tidy

    - name: Run Terratest
      run: |
        cd test
        go test -v
